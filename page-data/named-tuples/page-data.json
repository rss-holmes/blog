{"componentChunkName":"component---src-templates-blog-post-js","path":"/named-tuples/","result":{"data":{"site":{"siteMetadata":{"title":"Gods of Code","author":"Rohan Sen Sharma"}},"markdownRemark":{"id":"4b2acad8-a028-5e3c-affb-7888315e6ff2","html":"<ul>\n<li>named tuples are memory efficient shortcut to defining an immutable class in python manually</li>\n<li>namedtuples can be subclassed and even new methods can be added to it</li>\n<li>can be used to bring in structure to the code.Instead of passing around dictionaries which are too small in size to write into a full blown class , a namedtuple can be created</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> namedtuple\n\nCar <span class=\"token operator\">=</span> namedtuple<span class=\"token punctuation\">(</span><span class=\"token string\">'Car'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'color'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'mileage'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nCar <span class=\"token operator\">=</span> namedtuple<span class=\"token punctuation\">(</span><span class=\"token string\">'Car'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'color, mileage'</span><span class=\"token punctuation\">)</span>\n\nmy_car <span class=\"token operator\">=</span> Car<span class=\"token punctuation\">(</span><span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">34.33</span><span class=\"token punctuation\">)</span>\nmy_car <span class=\"token operator\">=</span> Car<span class=\"token punctuation\">(</span>color<span class=\"token operator\">=</span><span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span> mileage<span class=\"token operator\">=</span><span class=\"token number\">34.33</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># this will create an object of type car which will have the 2 attributes</span>\n\nmy_car<span class=\"token punctuation\">.</span>color <span class=\"token comment\"># => red</span>\nmy_car<span class=\"token punctuation\">.</span>mileage <span class=\"token comment\"># => 34.33</span>\nmy_car<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># => red</span>\nmy_car<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># => 34.33</span>\ncolor <span class=\"token punctuation\">,</span> mileage <span class=\"token operator\">=</span> my_car\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>my_car<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># subclassing named tuples to increase functionality</span>\n<span class=\"token comment\"># to add new methods in the subclass</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MyCarWithMethods</span><span class=\"token punctuation\">(</span>Car<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">hexcolor</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\n\t\t<span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>color <span class=\"token operator\">==</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">'#ff0000'</span>\n\t\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">'#000000'</span>\n\n<span class=\"token comment\"># to add new fields in the subclass</span>\n\nElectricCar <span class=\"token operator\">=</span> namedtuple<span class=\"token punctuation\">(</span><span class=\"token string\">'ElectricCar'</span><span class=\"token punctuation\">,</span> Car<span class=\"token punctuation\">.</span>_fields <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'charge'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># helper functions</span>\n\nmy_car<span class=\"token punctuation\">.</span>_asdict<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># => OrderedDict([('color', 'red'), ('mileage', 3812.4)])</span>\njson<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>my_car<span class=\"token punctuation\">.</span>_asdict<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># => '{\"color\": \"red\", \"mileage\": 3812.4}'</span>\nmy_car<span class=\"token punctuation\">.</span>_replace<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>color<span class=\"token operator\">*=</span><span class=\"token string\">'blue'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># => creates a shallow copy of the var with replaced field</span>\nCar<span class=\"token punctuation\">.</span>_make<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">999</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># => make a new variable of the instance</span></code></pre></div>","timeToRead":1,"frontmatter":{"title":"Named Tuples in Python","date":"November 28, 2020","spoiler":"Memory efficient data storage.","cta":null},"fields":{"slug":"/named-tuples/","langKey":"en"}}},"pageContext":{"slug":"/named-tuples/","previous":{"fields":{"slug":"/list-slicing/","langKey":"en","directoryName":"list-slicing","maybeAbsoluteLinks":[]},"frontmatter":{"title":"List Slicing in Python"}},"next":null,"translations":[],"translatedLinks":[]}},"staticQueryHashes":["336482444"]}