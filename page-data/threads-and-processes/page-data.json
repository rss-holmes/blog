{"componentChunkName":"component---src-templates-blog-post-js","path":"/threads-and-processes/","result":{"data":{"site":{"siteMetadata":{"title":"Gods of Code","author":"Rohan Sen Sharma"}},"markdownRemark":{"id":"30f18ba9-ea94-5ba9-9f3c-fc19e7449d99","html":"<h2 id=\"threading\"><a href=\"#threading\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Threading</h2>\n<ul>\n<li>all threads use the same memory heap space ðŸ§ </li>\n<li>sharing info between threads is easy (a consequence of sharing same memory space)</li>\n<li>multiple threads can write to the same location(a consequence of sharing same memory space. No race conditions because of GIL)</li>\n<li>module isnt killable</li>\n<li>multiple threads live in the same process</li>\n<li>each thread has own code,stack memory and instruction pointer</li>\n<li>if a thread has a memory leak, it can damage other threads and parent process</li>\n<li>cannot be used for parallel cpu computation as python doesnt allow true multithreading</li>\n<li>perfect for I/O, network, data operations as the processor is sitting idle in the duration that it is waiting for a resource(useful when a process is waiting for substantial amount of time)</li>\n<li>for cpu intensive processes there is very little advantage in using threading</li>\n<li>\n<p>Use Cases:</p>\n<ul>\n<li>lot of I/O or network usage</li>\n<li>lot of gui</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"processing\"><a href=\"#processing\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Processing</h2>\n<ul>\n<li>uses different memory heap space</li>\n<li>sharing information between processes is difficult (a consequence of sharing same memory space)</li>\n<li>child processes are killable</li>\n<li>each process has its own python interpreter and GIL</li>\n<li>data corruption and deadlocks are no more an issue</li>\n<li>The entire memory is copied into all sub processes causing significant overhead</li>\n<li>\n<p>Use Cases:</p>\n<ul>\n<li>code is CPU bound</li>\n</ul>\n</li>\n</ul>","timeToRead":1,"frontmatter":{"title":"Threads and Processes in Python","date":"December 03, 2020","spoiler":"Parallel processing in python.","cta":null},"fields":{"slug":"/threads-and-processes/","langKey":"en"}}},"pageContext":{"slug":"/threads-and-processes/","previous":{"fields":{"slug":"/string-formatting-in-python/","langKey":"en","directoryName":"string-formatting-in-python","maybeAbsoluteLinks":[]},"frontmatter":{"title":"String Formatting in Python"}},"next":null,"translations":[],"translatedLinks":[]}},"staticQueryHashes":["336482444"]}