{"componentChunkName":"component---src-templates-blog-post-js","path":"/record-structs-and-data-transfer-objects/","result":{"data":{"site":{"siteMetadata":{"title":"Gods of Code","author":"Rohan Sen Sharma"}},"markdownRemark":{"id":"32a81b26-5950-5ebd-863d-817e00c71cf7","html":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> NamedTuple\n\n<span class=\"token comment\"># there is another named tuple type present in typing which has a different syntax</span>\n<span class=\"token comment\"># and a support for type checking of the property variables</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Car</span><span class=\"token punctuation\">(</span>NamedTuple<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\tcolor <span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span>\n\tmileage<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span>\n\tautomatic<span class=\"token punctuation\">:</span> <span class=\"token builtin\">bool</span>\n\ncar1 <span class=\"token operator\">=</span> Car<span class=\"token punctuation\">(</span>color<span class=\"token operator\">=</span><span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span> mileage<span class=\"token operator\">=</span><span class=\"token number\">3812.4</span><span class=\"token punctuation\">,</span> automatic<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># serializes structs are intended primarily as a data exchange format rather than holding</span>\n<span class=\"token comment\"># data in memory. In some cases, packing primitive data into structs may use less memory</span>\n<span class=\"token comment\"># than keeping it in other data types.It can be used to handle binary data stored in files or</span>\n<span class=\"token comment\"># coming/sending in from network connections</span>\n\n<span class=\"token keyword\">from</span> struct <span class=\"token keyword\">import</span> Struct\n\nMyStruct <span class=\"token operator\">=</span> Struct<span class=\"token punctuation\">(</span><span class=\"token string\">'i?f'</span><span class=\"token punctuation\">)</span>\ndata <span class=\"token operator\">=</span> MyStruct<span class=\"token punctuation\">.</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">23</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42.0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#=> b'x17x00x00x00x00x00x00x00x00x00(B'</span>\nMyStruct<span class=\"token punctuation\">.</span>unpack<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token comment\">#=> (23, False, 42.0)</span></code></pre></div>","timeToRead":1,"frontmatter":{"title":"Record Structs and Data transfer objects in Python","date":"November 29, 2020","spoiler":"Efficient way to transfer data in python.","cta":null},"fields":{"slug":"/record-structs-and-data-transfer-objects/","langKey":"en"}}},"pageContext":{"slug":"/record-structs-and-data-transfer-objects/","previous":{"fields":{"slug":"/sets-and-multisets/","langKey":"en","directoryName":"sets-and-multisets","maybeAbsoluteLinks":[]},"frontmatter":{"title":"Sets and Multisets in Python"}},"next":{"fields":{"slug":"/stacks-and-queues/","langKey":"en","directoryName":"stacks-and-queues","maybeAbsoluteLinks":[]},"frontmatter":{"title":"Stacks and Queues in Python"}},"translations":[],"translatedLinks":[]}},"staticQueryHashes":["336482444"]}