{"componentChunkName":"component---src-templates-blog-post-js","path":"/the-with-statement/","result":{"data":{"site":{"siteMetadata":{"title":"Gods of Code","author":"Rohan Sen Sharma"}},"markdownRemark":{"id":"6df1e319-2ae9-55e5-98c7-09ecc1c72fad","html":"<h1 id=\"the-with-statementcontext-managers\"><a href=\"#the-with-statementcontext-managers\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The “With” Statement(Context Managers)</h1>\n<ul>\n<li>used where a functionality includes a start and an exit(the period in between is called the context)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># examples</span>\n\n<span class=\"token comment\"># when opening and reading a file</span>\n\n    f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;filename>'</span><span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">:</span>\n        f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n        f<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># when starting a work in a thread</span>\n\n    some_lock <span class=\"token operator\">=</span> threading<span class=\"token punctuation\">.</span>acquire<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    some_lock<span class=\"token punctuation\">.</span>acquire<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">:</span>\n        <span class=\"token operator\">//</span> do something\n    <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n        some_lock<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># using with</span>\n\n    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'filename'</span><span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">)</span>\n        <span class=\"token operator\">//</span> do something\n\n    <span class=\"token keyword\">with</span> threading<span class=\"token punctuation\">.</span>acquire<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token operator\">//</span> do something\n\n<span class=\"token comment\"># writing a custom file open functionality which can be used with \"with\"</span>\n\n    <span class=\"token comment\"># class based</span>\n\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">ManagedFile</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name\n\n        <span class=\"token keyword\">def</span> <span class=\"token function\">__enter__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># perform all the actions required to start the context and</span>\n            <span class=\"token comment\"># instantiate variables which will be available in the context</span>\n            self<span class=\"token punctuation\">.</span><span class=\"token builtin\">file</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span><span class=\"token builtin\">file</span>\n\n        <span class=\"token keyword\">def</span> <span class=\"token function\">__exit__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> exc_type<span class=\"token punctuation\">,</span> exc_val<span class=\"token punctuation\">,</span> exc_tb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># perform all actions required to exit the context in a safe</span>\n            <span class=\"token comment\"># manner ie closing all open variables</span>\n            <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span>\n                self<span class=\"token punctuation\">.</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># generator based</span>\n\n    <span class=\"token keyword\">from</span> contextlib <span class=\"token keyword\">import</span> contextmanager\n\n    <span class=\"token decorator annotation punctuation\">@contextmanager</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">managed_file</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">yield</span> f\n        <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n            f<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">###########</span>\n    <span class=\"token comment\"># usage</span>\n    <span class=\"token keyword\">with</span> managed_file<span class=\"token punctuation\">(</span><span class=\"token string\">'hello.txt'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n        f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'hello, world!'</span><span class=\"token punctuation\">)</span>\n        f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'bye now'</span><span class=\"token punctuation\">)</span></code></pre></div>","timeToRead":1,"frontmatter":{"title":"The With Statement (Context Managers)","date":"November 02, 2020","spoiler":"Managing context for code blocks.","cta":null},"fields":{"slug":"/the-with-statement/","langKey":"en"}}},"pageContext":{"slug":"/the-with-statement/","previous":{"fields":{"slug":"/drf-jwt/","langKey":"en","directoryName":"drf-jwt","maybeAbsoluteLinks":[]},"frontmatter":{"title":"DRF and JWT"}},"next":null,"translations":[],"translatedLinks":[]}},"staticQueryHashes":["336482444"]}