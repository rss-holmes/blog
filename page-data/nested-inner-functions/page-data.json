{"componentChunkName":"component---src-templates-blog-post-js","path":"/nested-inner-functions/","result":{"data":{"site":{"siteMetadata":{"title":"Gods of Code","author":"Rohan Sen Sharma"}},"markdownRemark":{"id":"02a147c4-4d84-5a98-8bf1-cbdf257d17b7","html":"<p>A function which is defined within another function is called a nested/inner function</p>\n<ul>\n<li>nested functions are able to access variables from the enclosing function scope</li>\n<li>variables declared within the nested function is not accessible from anywhere outside</li>\n<li>the nested function can only be accessed within the scope of the outer function and not anywhere else</li>\n</ul>\n<p>[<strong>python</strong>]</p>\n<p>def outerFunction(<em>text</em>):</p>\n<p>text = text</p>\n<p>def innerFunction():</p>\n<p>print(text)</p>\n<p>innerFunction()</p>\n<p><em>if</em> <strong>name</strong> == ’<strong>main</strong>‘:</p>\n<p>outerFunction(‘Hey!‘)</p>\n<p>innerFunction() <em>#=> this will throw an error as the innerfunction is not defined in the global scope</em></p>\n<p>[<strong>end</strong>]</p>\n<ul>\n<li>Inner functions are used so that they can be protected from everything happening outside the function</li>\n</ul>","timeToRead":1,"frontmatter":{"title":"Nested/Inner functions in python","date":"November 13, 2020","spoiler":"The function within the function.","cta":null},"fields":{"slug":"/nested-inner-functions/","langKey":"en"}}},"pageContext":{"slug":"/nested-inner-functions/","previous":{"fields":{"slug":"/assert-statements/","langKey":"en","directoryName":"assert-statements","maybeAbsoluteLinks":[]},"frontmatter":{"title":"Assert Statements in Python"}},"next":{"fields":{"slug":"/classes-and-oop/","langKey":"en","directoryName":"classes-and-oop","maybeAbsoluteLinks":[]},"frontmatter":{"title":"Classes and OOPS in python"}},"translations":[],"translatedLinks":[]}},"staticQueryHashes":["336482444"]}